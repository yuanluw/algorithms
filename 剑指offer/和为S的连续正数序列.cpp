/*
小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,
他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!
输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序
解题思路:
使用双指针left right, 来记录当前求和cnt, 如果cnt大于sum，则左指针left右移，cnt小于sum则右指针右移; 当两个指针相等时则退出循环  
*/

#include<iostream>
#include<vector>

using namespace std;

class Solution {
public:
    vector<vector<int> > FindContinuousSequence(int sum) {
        int left=1, right=2;
        vector<vector<int>> result;
        while(left<right){
        	//数列求和 
        	int cnt = (left+right)*(right-left+1)/2;
        	if(cnt == sum){
        		vector<int> l;
        		for(int i=left; i<=right;i++)
        			l.push_back(i);
        		result.push_back(l);
        		left++;
			}
			else if(cnt > sum){
				left++;
			}
			else{
				right++;
			}
		}
        return result;
    }
    
    vector<vector<int> > FindContinuousSequence2(int sum) {
        
        int left=1, right=2, cnt=3;
        vector<vector<int>> result;
        while(left<right){
        	if(cnt>sum){
        		cnt -= left;
        		left += 1;
			}
			else{
				if(cnt == sum){
					vector<int> l;
	        		for(int i=left; i<=right;i++)
	        			l.push_back(i);
	        		result.push_back(l);
				}
				right += 1;
				cnt += right;
			}
		}
		return result;
    }
    
    
};


int main(){
	
	Solution s;
	
	vector<vector<int>> result = s.FindContinuousSequence2(100);
	for(int i=0; i<result.size();i++){
		for(int j=0; j<result[i].size();j++){
			cout<<result[i][j]<<" ";
		}
		cout<<endl;
	}
		
		
	return 0;
	
}

